tosca_definitions_version: micro_tosca_yaml_1.1

description: >
  Anonymised version of the microservice-based architecture
  of a platform for monitoring and managing a smart factory

imports:
- micro: https://di-unipi-socc.github.io/microTOSCA/1.1/microTOSCA.yaml

topology_template:
  node_templates:
    d1:
      type: micro.nodes.Database
    d2:
      type: micro.nodes.Database
    d3:
      type: micro.nodes.Database
    d4:
      type: micro.nodes.Database
    d5:
      type: micro.nodes.Database
    d6:
      type: micro.nodes.Database
    d7:
      type: micro.nodes.Database

    m1:
      type: micro.nodes.MessageBroker
    m2:
      type: micro.nodes.MessageBroker

    s1:
      type: micro.nodes.Service
      requirements:
        - run_time: d1
        - run_time: d2
        - run_time: d3
        - run_time:
            node: s2
            relationship: td
    s2:
      type: micro.nodes.Service
      requirements:
        - run_time: d4
        - run_time: d5
        - run_time:
            node: s4
            relationship: td
    s3:
      type: micro.nodes.Service
      requirements:
        - run_time: m1
        - run_time: m2
    s4:
      type: micro.nodes.Service
      requirements:
        - run_time:
            node: s6
            relationship: td
    s5:
      type: micro.nodes.Service
      requirements:
        - run_time:
            node: s2
            relationship: td
    s6:
      type: micro.nodes.Service
      requirements:
        - run_time: d6
        - run_time: m1
    s7:
      type: micro.nodes.Service
      requirements:
        - run_time: d6
        - run_time:
            node: s5
            relationship: td
    s8:
      type: micro.nodes.Service
      requirements:
        - run_time: d6
        - run_time:
            node: s7
            relationship: td
    s9:
      type: micro.nodes.Service
      requirements:
        - run_time: d6
    s10:
      type: micro.nodes.Service
      requirements:
        - run_time: d7
        - run_time:
            node: s8
            relationship: td
    s11:
      type: micro.nodes.Service
      requirements:
        - run_time:
            node: s9
            relationship: td
        - run_time:
            node: s10
            relationship: td
    s12:
      type: micro.nodes.Service
      requirements:
        - run_time:
            node: s1
            relationship: td
        - run_time:
            node: s2
            relationship: td
        - run_time:
            node: s10
            relationship: td
        - run_time:
            node: s11
            relationship: td

  groups:
    edge:
      type: micro.groups.Edge
      members: [m1,m2,s1,s2]

  relationship_templates:
    td:
      type: micro.relationships.InteractsWith
      properties:
        timeout: true
        dynamic_discovery: true
